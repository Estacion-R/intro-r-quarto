---
title: "Procesando datos con `{tidyverse}`"
subtitle: "Principales herramientas (funciones) para el tratamiento de datos"
author: "[üîó Estaci√≥n R](https://estacion-r.netlify.app/)"
institution: Estaci√≥n R
date: 2024-02-21
footer: "[üîó Introducci√≥n al Procesamiento de Datos con R](https://pablotis.github.io/intro-r-quarto/)"
logo: ../../img/background-estacion_r_v2.png
format: 
  revealjs: 
    theme: ../estilo_diapos.scss
    multiplex: true
    transition: fade
    progress: true
    highlight-style: printing
    embed-resources: true
    code-line-numbers: false
    code-block-bg: true
    code-copy: true
code-block-border-left: "#31BAE9"
execute:
  execute:
  freeze: auto
  echo: true
---

# Bienvenidos y bienvenidas a Estaci√≥n R

::: columns
::: {.column width="50%"}
üí¨ [Slack](https://join.slack.com/t/estacion-r/shared_invite/zt-2cktmesg3-11HhUxMFmynQe18ZsBkVpA)

üîó [Web](https://estacion-r.netlify.app/)

üêò [Mastodon](https://botsin.space/@r_tips)

ùïè [X](https://twitter.com/estacion_erre)

‚úâÔ∏è [Correo](mailto:pablotisco@gmail.com)
:::

::: {.column width="50%"}
[Instagram](https://www.instagram.com/estacion_ere?igsh=OWhtcWR5ZGkwb3Bw&utm_source=qr)

[LinkedIn](https://www.linkedin.com/company/estacion-r/)
:::
:::

------------------------------------------------------------------------

## ¬øQu√© vimos?

<br>

‚úÖ Conceptos b√°sicos de R (valores, vectores, data.framtes, funciones, objetos)

<br>

‚úÖ C√≥mo armar y organizar un proyecto de trabajo

<br>

‚úÖ Qu√© son los paquetes (o librer√≠as)

## Hoja de Ruta

::: columns
::: {.column width="50%"}
üìå ¬øQu√© es la Ciencia de Datos?

<br>

üì¶ Paquete `{dplyr}`

```         
üîß `select()` üîß `filter()` 

üîß `mutate()` üîß `rename()` 

üîß `arrange()` 

üîß `group_by()` üîß `summarise()`  

üîß `joins` 
```
:::

::: {.column width="50%"}
üìå La pipa (`|>` o `%>%`)

<br>

üì¶ Paquete `{tidyr}`

```         
üîß `pivot_longer()` üîß `pivot_wider()`  
```
:::
:::

## Configuraci√≥n para esta clase

<br>

-   Armar un proyeto de trabajo nuevo

-   Crear una carpeta en el llamada `datos`

-   Descargar la base del [**Padr√≥n √önico Nacional de Alojamientos**](https://datos.yvera.gob.ar/dataset/padron-unico-nacional-alojamiento) (Argentina) y ubicarla en la carpeta `datos`

-   Crear un **script** de trabajo

# ¬øQu√© es la Ciencia de Datos?

## ¬øQu√© es la Ciencia de Datos?

![](../1-intro-r/images/proceso_ciencia_datos.jpg){fig-alt="r project console"}

# `{tidyverse}`

## ¬øQu√© es `{tidyverse}`?

::: incremental
-   Una colecci√≥n de paquetes.

-   Comparten una filosof√≠a acerca de los datos y la programaci√≥n en R ("*tidy*" -*ordenado*-).

-   Tienen una coherencia para ser utilizados en conjunto.

-   Orientado a ser le√≠do y escrito por y para seres humanos.

-   Una comunidad, basada en los principios del c√≥digo abierto y trabajo colaborativo.
:::

## ¬øQu√© es `{tidyverse}`?

![](../1-intro-r/images/circuito_del_dato_tidy.png)

## `{tidyverse}`

<br>

-   Instalaci√≥n:

``` r
install.packages("tidyverse")
```

## `{tidyverse}`

<br>

-   Cargo el paquete:

```{r message=TRUE, warning=TRUE}
library(tidyverse)
```

## `{tidyverse}`

-   Nos evita tener que instalar uno por uno a cada paquete:

``` r
install.packages("dplyr")
install.packages("tidyr")
install.packages("ggplot2")
```

<br>

-   Como tambi√©n tener que convocarlos de a uno:

``` r
library(dplyr)
library(tidyr)
library(ggplot2)
```

# La pipa

## Un operador llamado `pipa`

<br>

<br>

::: columns
::: {.column width="50%"}
<br>

```{r eval=FALSE}
base_de_datos |> 
  funcion1 |> 
  funcion2 |>  
  funcion3
```
:::

::: {.column width="50%"}
![](images/pipa.gif)
:::
:::

## Un operador llamado `pipa`

<br>

-   Pipa de **R base**: `|>`

<br>

-   Pipa de **{magritr}**: `%>%`

## Ejemplo:

<br> <br>

```{r}
datos <- data.frame(nombre = c("Pirulanzo", "Rodogovia", "Rodogovia", "Rodogovia"),
                    edad = c(23, 12, 87, 32))

datos
```

## Ejemplo:

-   Quiero calcular qu√© proporci√≥n de personas se llaman *Rodogovia*

<br>

-   Antes (*sin el pipe*):

```{r}
round(prop.table(table(datos$nombre)), digits = 1)
```

## Ejemplo:

<br>

-   Despu√©s (*con el pipe*):

```{r}
datos$nombre |> 
  table() |> 
  prop.table() |> 
  round(digits = 1)
```

# 

```{r echo=FALSE, out.width = '30%', fig.align = 'center'}
knitr::include_graphics("images/logo dplyr.png")
```

## Funciones del paquete dplyr:

<br>

| **Funci√≥n**   |                            **Acci√≥n** |
|:--------------|--------------------------------------:|
| `select()`    |     *selecciona o descarta variables* |
| `filter()`    |                    *selecciona filas* |
| `mutate()`    |              *crea / edita variables* |
| `rename()`    |                  *renombra variables* |
| `group_by()`  | *segmenta en funcion de una variable* |
| `summarize()` |         *genera una tabla de res√∫men* |

# **select()**

<html>

::: {style="float:left"}
:::

<hr color='#EB811B' size=1px width=1125px>

</html>

<html>

```{=html}
<p style="color:grey;" align:"center">Elige o descarta columnas de una base de datos</p>
```
</html>

## `select()`

<br>

-   La funci√≥n tiene la siguiente estructura:

```{r}
#| eval: false
base_de_datos |> 
  select(id, nombre) #<<
```

```{r echo=FALSE, fig.align = 'center', out.width='65%'}
knitr::include_graphics("images/select_presentacion.png")
```

## Caso pr√°ctico

```{r}
#| include: false
#| echo: false
library(readr)
df_puna <- read_csv(here::here("data/puna_base_agregada.csv"))
```

``` r
# Cargo paquete
library(readr)

# Importo datos
df_puna <- read_csv("datos/puna_base_agregada.csv")
```

<br>

```{r}
# Exploro la base
colnames(df_puna)
```

## Caso pr√°ctico

<br>

-   **Pedido:** La coordinadora me ha solicitado conocer la cantidad de plazas que hay por localidad y, si es posible, saber de qu√© tipo son los alojamientos

<br>

-   Variables de trabajo:

    -   *localidad*
    -   *plazas*
    -   *tipo*

## Caso pr√°ctico

<br>

-   Selecciono las 3 columnas de inter√©s

```{r}
#| eval: false
#| code-line-numbers: "3,4"
library(tidyverse)

df_puna |> 
  select(localidad, tipo, plazas)
```

## Caso pr√°ctico

<br>

-   Selecciono las 3 columnas de inter√©s

```{r}
#| code-line-numbers: "2"
library(tidyverse)

df_puna_sel <- df_puna |> 
  select(localidad, tipo, plazas)
```

<br>

-   Chequeo las columnas del nuevo objeto

```{r}
#| code-line-numbers: "1"
colnames(df_puna_sel)
```

# Otras formas de seleccionar...

## `select()` - *por posici√≥n*

<br>

1.  Chequeo la posici√≥n:

```{r}
colnames(df_puna)
```

## `select()` - *por posici√≥n*

<br>

2.  Selecciono

```{r}
#| code-line-numbers: "2"
df_puna_sel_posicion <- df_puna |> 
  select(7, 9, 13)
```

## `select()` - *por posici√≥n*

<br>

3.  Chequeo

```{r}
colnames(df_puna_sel_posicion)
```

## `select()` - *por posici√≥n (columnas consecutivas)*

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_posicion2 <- df_puna |> 
  select(1:3)
```

## `select()` - *por posici√≥n (columnas consecutivas)*

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_posicion2 <- df_puna |> 
  select(1:3)
```

<br>

```{r}
colnames(df_puna_sel_posicion2)
```

#  {.center auto-animate="true"}

![](https://imgs.search.brave.com/Frz7Kuv_uvyXQb269pQbZ2-UxWSZ-oIPOgfP4lTWmmU/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9naWZk/Yi5jb20vaW1hZ2Vz/L2hpZ2gvc2FjaGEt/YmFyb24tY29oZW4t/dmVyeS1uaWNlLXFq/N2x5YXFudXBueTl6/ODAuZ2lm.gif)

## `select()` - *por nombre (consecutiva)*

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_posicion3 <- df_puna |> 
  select(establecimientos:plazas)
```

## `select()` - *por nombre (consecutiva)*

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_posicion3 <- df_puna |> 
  select(establecimientos:plazas)
```

<br>

```{r}
colnames(df_puna_sel_posicion3)
```

# 

![](https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExeXk3OXA1YnRnOGFkOGxqMjd4ZHU4MzZha2I4dzhqMmw0NTFmN2RoZSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/d4W4ZshZVbrqYvVnh8/giphy.gif)

## `select()` - *Por patrones de texto*

<br>

**Tr√≠o:**

-   `starts_with()` --\> *empieza con...*

-   `ends_with()` --\> *termina con...*

-   `contains()` --\> *contiene...*

## `select()` + `starts_with()`

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_patron1 <- df_puna |> 
  select(starts_with("provincia"))
```

## `select()` + `starts_with()`

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_patron1 <- df_puna |> 
  select(starts_with("provincia"))
```

<br>

```{r}
colnames(df_puna_sel_patron1)
```

## `select()` + `ends_with()`

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_patron2 <- df_puna |> 
  select(ends_with("o"))
```

## `select()` + `starts_with()`

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_patron2 <- df_puna |> 
  select(ends_with("o"))
```

<br>

```{r}
colnames(df_puna_sel_patron2)
```

# 

![](https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExbjEzMW15cWk3bXJ5MzQ0aXQwd2IwenIyN3JseTlucW9nc2R0enY4NCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Lk023zZqHJ3Zz4rxtV/giphy.gif)

## `select()` + `contains()`

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_patron3 <- df_puna |> 
  select(contains("_"))
```

## `select()` + `contains()`

<br>

```{r}
#| code-line-numbers: "2"
df_puna_sel_patron3 <- df_puna |> 
  select(contains("_"))
```

<br>

```{r}
colnames(df_puna_sel_patron3)
```

# 

![](https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExYXprbDVsM2l1MmF5dDRjMGY1N2xiNW52dmFscHNsM3NhbDZ5eXc5NSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/NEvPzZ8bd1V4Y/giphy.gif)

# LA COMBINACI√ìN FINAL

## `select()`

<br>

```{r}
#| code-line-numbers: "2"
df_puna_select_tuto <- df_puna |> 
  select(localidad, 2, starts_with("provincia"), 9:11)
```

## `select()`

<br>

```{r}
#| code-line-numbers: "1"
df_puna_select_tuto <- df_puna |> 
  select(localidad, 2, starts_with("provincia"), 9:11)
```

<br>

```{r}
colnames(df_puna_select_tuto)
```

# 

![](images/explode.gif)

# Ejercitaci√≥n grupal

## Ejercitaci√≥n

-   Crear un objeto en donde importamos la base de datos de Alojamientos.

-   Seleccionar 3 variables de la base seg√∫n el nombre de las mismas y guardar en otro objeto.

-   Seleccionar 3 variables de la base seg√∫n la posici√≥n de las mismas y guardar en otro objeto.

-   Seleccionar todas las variables que **empiecen** con un patr√≥n de texto (a elegir).

# **filter()**

<html>

::: {style="float:left"}
:::

<hr color='#EB811B' size=1px width=1125px>

</html>

<html>

```{=html}
<p style="color:grey;" align:"center">Define los casos (filas) en base a una condici√≥n</p>
```
</html>

## `filter()`

<br>

-   La funci√≥n tiene la siguiente estructura:

```{r}
#| eval: false
#| code-line-numbers: "2"
base_de_datos |> 
  filter(condicion) 
```

```{r echo=FALSE, fig.align = 'center', out.width='65%'}
knitr::include_graphics("images/filter_presentacion.png")
```

## `filter()`

<br>

-   La funci√≥n tiene la siguiente estructura:

```{r}
#| eval: false
#| code-line-numbers: "2"
base_de_datos |> 
  filter(Edad > 65) 
```

```{r echo=FALSE, fig.align = 'center', out.width='65%'}
knitr::include_graphics("images/filter_presentacion.png")
```

## Caso pr√°ctico

<br>

-   La directora de tesis me pidi√≥ que estudie los alojamientos de tipo **Camping**.

<br>

-   Universo de an√°lisis / Poblaci√≥n de estudio:

    ```         
    - Alojamientos tipo _Camping_
    ```

## Caso pr√°ctico

<br>

-   Chequeo con qu√© tipos de alojamiento cuento en la base:

## Caso pr√°ctico

<br>

-   Chequeo con qu√© tipos de alojamiento cuento en la base:

```{r}
unique(df_puna$clasificacion_minturdep)
```
