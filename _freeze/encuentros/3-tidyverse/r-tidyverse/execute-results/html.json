{
  "hash": "39d14e8abc361ea52900e74dad76b906",
  "result": {
    "markdown": "---\ntitle: \"Procesando datos con `{tidyverse}`\"\nsubtitle: \"Principales herramientas (funciones) para el tratamiento de datos\"\nauthor: \"[🔗 Estación R](https://estacion-r.netlify.app/)\"\ninstitution: Estación R\ndate: 2024-02-21\nfooter: \"[🔗 Introducción al Procesamiento de Datos con R](https://pablotis.github.io/intro-r-quarto/)\"\nlogo: ../../img/background-estacion_r_v2.png\nformat: \n  revealjs: \n    theme: ../estilo_diapos.scss\n    multiplex: true\n    transition: fade\n    progress: true\n    highlight-style: printing\n    embed-resources: true\n    code-line-numbers: false\n    code-block-bg: true\n    code-copy: true\ncode-block-border-left: \"#31BAE9\"\nexecute:\n  execute:\n  freeze: auto\n  echo: true\n---\n\n\n# Bienvenidos y bienvenidas a Estación R\n\n::: columns\n::: {.column width=\"50%\"}\n💬 [Slack](https://join.slack.com/t/estacion-r/shared_invite/zt-2cktmesg3-11HhUxMFmynQe18ZsBkVpA)\n\n🔗 [Web](https://estacion-r.netlify.app/)\n\n🐘 [Mastodon](https://botsin.space/@r_tips)\n\n𝕏 [X](https://twitter.com/estacion_erre)\n\n✉️ [Correo](mailto:pablotisco@gmail.com)\n:::\n\n::: {.column width=\"50%\"}\n[Instagram](https://www.instagram.com/estacion_ere?igsh=OWhtcWR5ZGkwb3Bw&utm_source=qr)\n\n[LinkedIn](https://www.linkedin.com/company/estacion-r/)\n:::\n:::\n\n---\n\n## ¿Qué vimos?\n\n<br>\n\n✅ Conceptos básicos de R  (valores, vectores, data.framtes, funciones, objetos)\n\n<br>\n\n✅ Cómo armar y organizar un proyecto de trabajo\n\n<br>\n\n✅ Qué son los paquetes (o librerías)\n\n\n\n## Hoja de Ruta\n\n::: columns\n::: {.column width=\"50%\"}\n📌 ¿Qué es la Ciencia de Datos?\n\n<br>\n\n📦 Paquete `{dplyr}`\n\n    🔧 `select()` 🔧 `filter()` \n    \n    🔧 `mutate()` 🔧 `rename()` \n    \n    🔧 `arrange()` \n    \n    🔧 `group_by()` 🔧 `summarise()`  \n    \n    🔧 `joins` \n\n:::\n\n::: {.column width=\"50%\"}\n\n📌 La pipa (`|>` o `%>%`)\n\n<br>\n\n📦 Paquete `{tidyr}`\n\n    🔧 `pivot_longer()` 🔧 `pivot_wider()`  \n    \n:::\n\n:::\n\n\n# ¿Qué es la Ciencia de Datos?\n\n## ¿Qué es la Ciencia de Datos?\n\n![](../1-intro-r/images/proceso_ciencia_datos.jpg){fig-alt=\"r project console\"}\n\n# `{tidyverse}`\n\n## ¿Qué es `{tidyverse}`?\n\n::: {.incremental}\n\n- Una colección de paquetes.\n\n- Comparten una filosofía acerca de los datos y la programación en R (\"*tidy*\" -*ordenado*-).\n\n- Tienen una coherencia para ser utilizados en conjunto.\n\n- Orientado a ser leído y escrito por y para seres humanos.\n\n- Una comunidad, basada en los principios del código abierto y trabajo colaborativo.\n\n:::\n\n## ¿Qué es `{tidyverse}`?\n\n![](../1-intro-r/images/circuito_del_dato_tidy.png)\n\n## `{tidyverse}`\n\n- Instalación: \n\n```r\ninstall.packages(\"tidyverse\")\n```\n\n<br>\n\n- Cargo el paquete:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n\n## `{tidyverse}`\n\n- Nos evita tener que instalar uno por uno cada paquete:\n\n```r\ninstall.packages(\"dplyr\")\ninstall.packages(\"tidyr\")\ninstall.packages(\"ggplot2\")\n```\n\n<br>\n\n- Como también tener que convocarlos te a uno:\n\n```r\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n```\n\n## Un operador llamado `pipa`\n\n<br>\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_de_datos |> \n  funcion1 |> \n  funcion2 |>  \n  funcion3\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n![](images/pipa.gif)\n:::\n:::\n\n## Un operador llamado `pipa`\n\n<br>\n\n- Pipa de **R base**:  ` |> `\n\n<br>\n\n- Pipa de **{magritr}**:  ` %>% `\n\n\n## Ejemplo:\n\n<br>\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos <- data.frame(nombre = c(\"Pirulanzo\", \"Rodogovia\", \"Rodogovia\", \"Rodogovia\"),\n                    edad = c(23, 12, 87, 32))\n\ndatos\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     nombre edad\n1 Pirulanzo   23\n2 Rodogovia   12\n3 Rodogovia   87\n4 Rodogovia   32\n```\n:::\n:::\n\n\n## Ejemplo:\n\n- Quiero calcular qué proporción de personas se llaman _Rodogovia_\n\n<br>\n\n- Antes (*sin el pipe*):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nround(prop.table(table(datos$nombre)), digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nPirulanzo Rodogovia \n      0.2       0.8 \n```\n:::\n:::\n\n\n## Ejemplo:\n\n<br>\n\n- Después (*con el pipe*):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos$nombre |> \n  table() |> \n  prop.table() |> \n  round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nPirulanzo Rodogovia \n      0.2       0.8 \n```\n:::\n:::\n\n\n# \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/logo dplyr.png){fig-align='center' width=30%}\n:::\n:::\n\n\n\n## Funciones del paquete dplyr:\n\n<br>\n\n| __Función__   | __Acción__ |\n| :---          | ---:   |\n| `select()`    | *selecciona o descarta variables*|\n| `filter()`    | *selecciona filas*|\n| `mutate()`    | *crea / edita variables*|\n| `rename()`    | *renombra variables*|\n| `group_by()`  | *segmenta en funcion de una variable*|\n| `summarize()` | *genera una tabla de resúmen*|\n\n\n# __select()__ \n\n<html>\n  <div style='float:left'></div>\n  <hr color='#EB811B' size=1px width=1125px>\n</html>\n\n<html>\n<p style=\"color:grey;\" align:\"center\">Elije o descarta columnas de una base de datos</p>\n</html>\n\n\n\n## La función tiene el siguiente esquema:\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nbase_de_datos |> \n  select(id, nombre)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/select_presentacion.png){fig-align='center' width=65%}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}